name: dolle-iot # you probably want to 'snapcraft register <name>'
base: core20 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: IoT implementation at Dolle A/S # 79 char long summary
description: |
  For more information see README.md

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

parts:
  
  limcheck:
    plugin: colcon
    source: https://github.com/pbtorrild/dolle-iot.git
    source-subdir: limcheck
    build-packages: 
      - make
      - gcc
      - g++
      - libblas-dev
      - libqt5-ukui-style-dev
      - libqt5charts5-dev
      - libqt5datavisualization5-dev
      - libqt5gamepad5-dev
      - libqt5gstreamer-dev
      - libqt5networkauth5-dev
      - libqt5opengl5-dev
      - libqt5pas-dev
      - libqt5remoteobjects5-dev
      - libqt5scxml5-dev
      - libqt5sensors5-dev
      - libqt5serialbus5-dev
      - libqt5serialport5-dev
      - libqt5svg5-dev
      - libqt5texttospeech5-dev
      - libqt5virtualkeyboard5-dev
      - libqt5waylandclient5-dev
      - libqt5waylandcompositor5-dev
      - libqt5webchannel5-dev
      - libqt5webkit5-dev
      - libqt5websockets5-dev
      - libqt5webview5-dev
      - libqt5x11extras5-dev
      - libqt5xdg-dev
      - libqt5xdgiconloader-dev
      - libqt5xmlpatterns5-dev
      - libqtav-dev
      - libqtav-private-dev
      - libqtdbusmock1-dev
      - libqtdbustest1-dev
      - libqtermwidget5-0-dev
      - libqtest-ocaml-dev
      - libqtspell-qt5-dev
    stage-packages:  [ros-foxy-ros2run]

apps:
  gui:
    command: opt/ros/foxy/bin/ros2 run limcheck gui
    plugs: [network, network-bind, camera, account-control, home]
    extensions: [ros2-foxy]
